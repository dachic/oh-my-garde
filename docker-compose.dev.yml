version: "3.7"

services:
    traefik:
        image: "traefik:v2.0.2"
        container_name: "${PROJECT_NAME}-traefik"
        command:
            - "--log.level=DEBUG"
            - "--api.insecure=true"
            # Enabling docker provider
            - "--providers.docker=true"
             # Do not expose containers unless explicitly told so
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.web.address=:80"
        networks:
            - proxy
        ports:
            - "80:80"
            - "8080:8080"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.traefik.entrypoints=web"
            - "traefik.http.routers.traefik.rule=Host(`monitor.${DOMAIN_NAME}`)"
            - "traefik.http.services.traefik.loadbalancer.server.port=8080"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"

    apache:
        build: ./docker/apache
        container_name: ${PROJECT_NAME}-apache
        depends_on:
            - postgres
        networks:
            - proxy
        volumes:
            - ./docker/apache/apache2.conf:/etc/apache2/conf-enabled/apache2.conf:ro
            - ./docker/php/php.ini:/usr/local/etc/php/php.ini
            - ./server:/var/www/symfony:cached
        expose:
            - 80
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${PROJECT_NAME}_apache.rule=Host(`api.${DOMAIN_NAME}`)"
            - "traefik.http.routers.${PROJECT_NAME}_apache.entrypoints=web"

    adminer:
        image: wodby/adminer
        container_name: ${PROJECT_NAME}-adminer
        expose:
            - 9000
        environment:
            - ADMINER_DEFAULT_DB_DRIVER=pgsql
            - ADMINER_DEFAULT_DB_HOST=postgres
            - ADMINER_DEFAULT_DB_NAME=${DB_DATABASE}
        networks:
            - proxy
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${PROJECT_NAME}_adminer.rule=Host(`adminer.${DOMAIN_NAME}`)"
            - "traefik.http.services.${PROJECT_NAME}_adminer.loadbalancer.server.port=9000"
            - "traefik.http.routers.${PROJECT_NAME}_adminer.entrypoints=web"

    postgres:
        image: postgres:12-alpine
        container_name: ${PROJECT_NAME}-postgres
        volumes:
            - ./docker/postgresql/data:/var/lib/postgresql/data:rw
        networks:
            - proxy
        environment:
            - POSTGRES_DB=${DB_DATABASE}
            - POSTGRES_USER=${DB_USERNAME}
            - POSTGRES_PASSWORD=${DB_PASSWORD}

    node:
        container_name: "${PROJECT_NAME}_node"
        image: node:latest
        working_dir: /home/app
        volumes:
            - ./client:/home/app:rw,cached
        networks:
            - proxy
        expose:
            - 3000
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${PROJECT_NAME}_node.rule=Host(`${DOMAIN_NAME}`)"
            - "traefik.http.services.${PROJECT_NAME}_node.loadbalancer.server.port=3000"
            - "traefik.http.routers.${PROJECT_NAME}_node.entrypoints=web"
        command: ["yarn", "start"]

    maildev:
        image: djfarrelly/maildev
        container_name: ${PROJECT_NAME}-maildev
        networks:
            - proxy
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${PROJECT_NAME}_maildev.rule=Host(`maildev.${DOMAIN_NAME}`)"
            - "traefik.http.services.${PROJECT_NAME}_maildev.loadbalancer.server.port=80"
            - "traefik.http.routers.${PROJECT_NAME}_maildev.entrypoints=web"

networks:
  proxy:
    external: false
