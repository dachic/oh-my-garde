version: "3.7"

services:
    apache:
        build: ./docker/apache
        container_name: ${PROJECT_NAME}-apache
        depends_on:
            - postgres
        networks:
            - ot_network
        volumes:
            - ./docker/apache/apache2.conf:/etc/apache2/conf-enabled/apache2.conf:ro
            - ./docker/php/php.ini:/usr/local/etc/php/php.ini
            - ./server:/var/www/symfony:cached
        expose:
            - 80
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${PROJECT_NAME}_apache.rule=Host(`api.${DOMAIN_NAME}`)"
            - "traefik.http.routers.${PROJECT_NAME}_apache.tls.certresolver=leresolver"
            - "traefik.http.routers.${PROJECT_NAME}_apache.entrypoints=websecure"

    adminer:
        image: wodby/adminer
        container_name: ${PROJECT_NAME}-adminer
        expose:
            - 9000
        environment:
            - ADMINER_DEFAULT_DB_DRIVER=pgsql
            - ADMINER_DEFAULT_DB_HOST=postgres
            - ADMINER_DEFAULT_DB_NAME=${DB_DATABASE}
        networks:
            - ot_network
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${PROJECT_NAME}_adminer.rule=Host(`adminer.${DOMAIN_NAME}`)"
            - "traefik.http.routers.${PROJECT_NAME}_adminer.tls.certresolver=leresolver"
            - "traefik.http.routers.${PROJECT_NAME}_adminer.entrypoints=websecure"

    postgres:
        image: postgres:12-alpine
        container_name: ${PROJECT_NAME}-postgres
        volumes:
            - ./docker/postgres/data:/var/lib/postgresql/data:rw
            - ./docker/backup:/data
        networks:
            - ot_network
        environment:
            - POSTGRES_DB=${DB_DATABASE}
            - POSTGRES_USER=${DB_USERNAME}
            - POSTGRES_PASSWORD=${DB_PASSWORD}

    node:
        container_name: "${PROJECT_NAME}_node"
        image: node:latest
        working_dir: /home/app
        volumes:
            - ./client:/home/app:rw,cached

    nginx:
        image: flashspys/nginx-static
        container_name: "${PROJECT_NAME}_nginx_react"
        expose:
            - 80
        networks:
            - ot_network
        volumes:
            - ./client/build:/static
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${PROJECT_NAME}_nginx_react.rule=Host(`${DOMAIN_NAME}`)"
            - "traefik.http.routers.${PROJECT_NAME}_nginx_react.tls.certresolver=leresolver"
            - "traefik.http.services.${PROJECT_NAME}_nginx_react.loadbalancer.server.port=80"
            - "traefik.http.routers.${PROJECT_NAME}_nginx_react.entrypoints=websecure"

networks:
  ot_network:
    external: true
